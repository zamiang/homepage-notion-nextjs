[
  {
    "id": "48bf9070-3e34-40c3-8d50-280910e7b7d1",
    "title": "An introduction to building software for value-based care",
    "slug": "value-based-care-intro",
    "excerpt": "This post argues that building successful software for value-based care (VBC) requires a shift in mindset: create a Customer Relationship Management (CRM) tool, not just a better Electronic Health Record (EHR). VBC realigns healthcare incentives around long-term patient outcomes, succeeding through proactive, relationship-based care rather than transactional services. Technology's role is to support this relationship by helping care teams orchestrate interventions effectively. The most valuable tools are often simple and pragmatic, focusing on the unique, core needs of the care model and enabling proactive management of patient health.",
    "date": "2022-07-02",
    "content": "\nI attended a talk on 'The Future of the EHR' and noticed a significant gap between the presented capabilities and what I observed driving great care at Cityblock. At Cityblock, our ideal electronic health record (EHR) resembled a customer relationship management (CRM) tool with a side of EHR. Given this disparity, I wanted to reflect on my journey as the first engineer and head of engineering for Cityblock Health. What did we do that mattered and why?\n\n\nOur aim at Cityblock was to improve the lives of people in underserved communities. However, our engineering and product team primarily consisted of professionals from non-healthcare backgrounds with innovative ideas for supporting our staff. Some concepts included voice/dictation capabilities, radically simplifying tasks/collaboration, a command line interface, and automating care plan management. Interestingly, our most successful projects were relatively modest builds, such as:\n\n- UI, policies, and procedures for care workers to text patients\n- Real-time integrations with health information exchanges (HIEs) that drove immediate in-person interventions, primarily around hospital admissions\n- Spreadsheet import/export functionality for matching providers and patients and rebalancing care teams\n\nWhy did these seemingly simple features matter, while many others didn't? Let's explore what value-based care is fundamentally about.\n\n\n<figure><img src=\"/images/Screen_Shot_2022-07-02_at_16.51.25.png\" /></figure>\n\n\n### Value-Based Care\n\n\nValue-based care is about putting patients first in everything we do - that is the singular core value. The patient is our customer, and our complete focus is providing excellent service to our customers over the long term.\n\n\nHowever, as software builders who don't directly see patients, how do we effectively \"put patients first\"?\n\n\nWe put patients first by helping care workers implement appropriate interventions. We orchestrate the right people, in the right place, with the right information, at the right time.\n\n\n> I use \"appropriate\" here instead of \"right,\" \"correct,\" or \"ideal\" intentionally.   \n> The tech team builds trust through making and keeping promises with our staff and patients. Within the scope of value-based care, the most effective path is to provide consistent, easy-to-understand, and dependable solutions across all challenges the staff face.\n\n\n<figure><img src=\"/images/qtq80-CxRwk9.jpeg\" /></figure>\n\n\n### What is Value-Based Care?\n\n\nValue-based care (VBC) is a relatively new approach to healthcare payment. It generally means that medical professionals assume financial responsibility or \"risk\" for the quality of care they provide. This differs significantly from fee-for-service (FFS), where providers focus on performing discrete tasks well. In FFS, providers manage their reputation, but they receive the same payment regardless of readmissions or complications in the care they provide. They also rarely address issues beyond the medical scope, such as transportation, housing, or mental health.\n\n\nThere are numerous value-based care financial models. Most commonly, they take the form of combining many services into one \"bundled payment\" (such as combining preparation, surgery, and follow-ups for a knee replacement), shared savings, or partial and then full risk (sometimes called \"capitation\"). Risk approaches are unique since the provider organization can lose money if a patient's costs exceed their estimate. When calculating cost in a risk agreement, medical providers and insurance companies negotiate whether to include the costs of physicians, specialists, emergency visits, and pharmacy.\n\n\nOne challenge with shared savings and risk contracts is that they incentivize providers to lower costs - which could potentially lead to (illegally) denying or discouraging services in the short term. To counteract this incentive, most value-based contracts span 3+ years, which would penalize such behavior if it increased costs later. In practice, most value-based care providers focus on reducing emergency room utilization in favor of more frequent and longer primary care or social needs-focused visits. An ED admission costs approximately $2,200 in NYC (Gottlieb et al., 2018), and those resources could fund many hours of specialized in-home services.\n\n\n> Quality measures are another way the health system ensures baseline care. These quality measures might include requirements such as \"[ensure each patient diagnosed with diabetes gets their A1c level checked every 12 months](https://mdinteractive.com/mips_quality_measure/2021-mips-quality-measure-001).\" Quality measures are updated annually to prevent providers from gaming the system. However, [their effectiveness remains unclear](https://chqpr.org/downloads/Why_Quality_Measures_Do_Not_Measure_Quality.pdf).\n\n\n**Why Not Fee for Service?**\n\n\nA relatively healthy individual we cared for at Cityblock averaged 15-20 emergency visits per month (one every other day) and had not seen a primary care doctor in many years. On the other end of the utilization spectrum, I recently scheduled an appointment with my primary care physician, and the next available slot was three months out. On the day of the visit, I took approximately two hours off work to see the doctor for about 8 minutes and pay a $75 copay.\n\n\nMost readers may not frequently visit the emergency room, but many relatively healthy people do. The ER effectively functions as an as-needed, accessible medical service. People who cannot take time off work, wait months for an appointment, or afford copays rationally use the ER when they need medical attention or are concerned about a health issue.\n\n\nValue-based care attempts to better meet people's needs and align incentives among patients, providers, and insurance companies. I believe this is best achieved when providers develop deep relationships with their patients and act proactively rather than reactively.\n\n\n### The Value Journey\n\n\nVBC tools support several key stages of the patient-provider relationship. In simplest terms, a provider reaches out to patients, actively listens to them, and then helps them achieve their goals. The process typically includes:\n\n- **Outreach**: How can we identify and initiate conversations with our patients?\n- **Knowledge and Trust Building**: How can we learn more about the actual challenges this patient faces? How can we deepen our relationship to establish two-way communication?\n- **Population Management:** What interventions can we implement today to reduce the likelihood of more intensive interventions later? What is the most critical intervention for the person who needs it most?\n\nA patient will move between these three areas of focus, sometimes in reverse order, such as when a first visit doesn't go well and the provider needs to try another approach to build trust.\n\n\n### The People Doing the Work\n\n\nUnderstanding the people caring for patients and their responsibilities is essential before considering technological solutions. People first.\n\n\nA significant insight of the value-based care model is that complex care management requires establishing a trusted contact with the patient separate from individual medical or behavioral specialists. A trusted non-medical contact can provide extended, meaningful visits and higher-quality care at lower costs by serving as the \"quarterback\" of a broader team of experts.\n\n\nThe \"quarterback\" of the care team (a group collaborating to care for an individual patient) can be a community member who manages the relationship with the patient. They provide trusted referrals to and seek guidance from a team of specialists and a network of community organizations. These specialists may participate in a care team that meets daily. The medical and social needs specialists may co-lead a daily care team meeting or \"huddle,\" but at the patient level, they are typically brought in to address specific issues and/or co-develop a forward-looking care plan with the \"quarterback.\"\n\n\nIn terms of relative scale, the \"quarterback\" may focus on approximately 20 patients, while a specialist like a social worker may serve around 100 patients (NOTE: there is considerable variance here - sometimes the quarterback may manage 100+ patients).\n\n\n**Brief Role Descriptions:**\n\n\n<u>Community Health Partner / Quarterback</u>\n\n- Foster lasting relationships as the face of the team and key point of contact\n- Help patients achieve their goals, identify new needs, and coordinate care\n- Collaboratively manage care for a population living with complex medical and behavioral health needs\n\n<u>NP/PA, RN, and PCP</u> (NOTE: These are very different roles but all focus on medical operations)\n\n- Co-manage a panel of complex patients in a value-based care environment\n- PA/NP: Provide comprehensive care management, chronic disease management, urgent home-based and community-based primary care visits, preventative care, and wellness. Work with relevant providers regarding behavioral health and other specialties\n- PCP: Diagnosis, treatment, counseling, medication management, acute triage, and follow-up care\n\n<u>Social Worker / Behavioral Health / LCSW</u>\n\n- Coordinate treatment plans, perform psychotherapy, support medication management, etc.\n\nOther team members may include lawyers, transportation specialists, benefits specialists, and more.\n\n\nBeyond the care team, broader management roles exist, such as Medical Directors and Care Management leaders who oversee multiple care teams to ensure quality, compliance, and consistent care models. On the business side, Market Operations professionals analyze entire geographic areas and think strategically about staffing levels, patient populations, community partnerships, and physical resources like clinics or equipment.\n\n\n<figure><img src=\"/images/Screen_Shot_2022-07-02_at_16.48.16.png\" /></figure>\n\n\n**Tech Fluency of Staff**\n\n\nWe've briefly examined roles and responsibilities, but it's important to note that healthcare professionals typically use very different tools than office workers. Regarding technological experience, it's generally safe to assume these professionals:\n\n- Are adept at using various complex tools and finding workarounds\n- Don't prefer using iPads for work (a note to every digital health startup)\n- Share tips and tricks with each other verbally\n- Have limited experience with Slack/Teams/Discord\n- Have limited experience with GSuite for documents or calendar management (most medical professionals have administrative staff manage their calendars)\n- Are comfortable with email but follow different communication norms\n- Are comfortable with texting or messaging applications\n\n> Organizations can hire for technological proficiency, but this doesn't necessarily correlate with job performance at scale. However, when starting small, this approach can help establish initial operations.\n\n\n### The Role of Technology\n\n\nTechnology's primary role is to put the patient first. Tech teams in this domain must rigorously manage resources and focus to provide care across multiple dimensions and address countless edge cases. They must also help the overall business iterate quickly toward a proven effective model.\n\n\nI'll discuss the extensive range of functionality in a future post, but generally, the business needs far exceed the team's capabilities, at least initially. This leads to numerous discussions about whether to build, buy, integrate, or outsource solutions.\n\n\nAs a general principle, you should build solutions that are unique to your company and core to your model - areas where you'll need to iterate most frequently. Everything else can be outsourced, purchased, or obtained through partnerships. However, if you cannot find a partner that meets your quality and speed requirements, it may make sense to bring that capability in-house.\n\n\nHere is a diagram illustrating this approach:\n\n\n<figure><img src=\"/images/Screen_Shot_2022-07-02_at_18.22.10.png\" /></figure>\n\n\nIn software design, I often emphasize \"optimizing for flexibility\" and building systems that are easy to modify safely. Ease of modification is far more important than code execution speed. Business realities change continuously. Areas that were not core may become essential, and unique aspects may become less distinctive as the competitive (and political) landscape evolves.\n\n\nWhile tech teams must creatively address all business needs, in-house teams should focus on areas that are both unique and core to the business; otherwise, your attention will be spread too thin to provide differential value and meaningful innovation.\n\n\nThose <u>unique and core</u> tools may include:\n\n- Solutions for selecting, prioritizing, and matching patients with providers (\"Which patients can we help?\" \"Which providers should see them and how often?\")\n- Tools providers use in the field (mobile apps/websites)\n- Tools that management uses to make informed market-level decisions (reporting dashboards)\n\nAreas that are <u>core but less unique</u> might include:\n\n- Identifying quality gaps\n- Scheduling - though the quality of external tools may be insufficient\n\nAreas that are <u>not core but unique</u> might include:\n\n- Reports for external partners\n\n# The Future of Value-Based Care Tools\n\n\n<figure><img src=\"/images/Screen_Shot_2022-06-25_at_09.21.21.png\" /></figure>\n\n\nValue-based care demands a great deal from providers, who urgently need new tools in this environment.\n\n\nI believe the future of EHRs will involve a bifurcation between teams focused on volume and those concerned with value. This is illustrated in the chart above, where providers assuming risk require more sophisticated tools for data collection, analysis, and planning compared to those handling fee-for-service.\n\n\nBeyond performing their jobs effectively, value-focused teams must anticipate future needs and actively engage patients (rather than waiting for them to schedule appointments). Value-based care tools should help care teams manage relationships with their patients and plan proactively to maintain trust and reduce the risk of adverse outcomes.\n\n\nFrom this perspective, the ideal solution begins to resemble a sophisticated CRM platform like Zendesk or Salesforce rather than a traditional EHR.\n\n"
  },
  {
    "id": "1e249a3d-5355-4382-aa8f-b51fc940ab2e",
    "title": "Learnings from building Kelp: Getting people the information they need when they need it is hard!",
    "slug": "learning-from-kelp",
    "excerpt": "Reflections on pausing the contextual recommendation tool, Kelp, concluding that its goal—getting people the right information at the right time—is nearly impossible for a third-party app to achieve. The core problem is technical: without deep, OS-level access to user data and behavioral signals, recommendations remain mediocre. True contextual help must be built into the operating system itself. The key business takeaway was the need to solve a highly specific, paying use case for a narrow audience before attempting a broad, cross-platform solution.",
    "date": "2022-04-30",
    "content": "\nI've decided to temporarily halt progress on Kelp and take [a job](https://www.akitasoftware.com/blog-posts/joining-akita-to-build-the-observability-solution-i-wish-i-had). Why? What did I learn?\n\n\nMy goal with Kelp was to build a tool that \"gets people the information they need when they need it.\" Hitting that goal proved more difficult than anticipated!\n\n\nWhy? Recommendations are a multi-sided challenge. Kelp needs three things:\n\n1. Access to the information to be recommended\n2. Signals for when to recommend information\n3. A UI for presenting recommendations\n\nFor step one, we need to cross boundaries from native apps (like Chrome, Safari, or Messages) and API-driven tools (like Gsuite or MS Teams). Even with modern APIs, there are gaps in this data, leaving an \"uncanny valley\" of recommendations.\n\n> At best, Kelp can combine \"meh\" information with \"meh\" signals into a fantastic UI.   \n> Meh times meh is still meh.\n\nFor example, Kelp cannot compete with features like Safari's recommendations that pull from Messages. Kelp does not have access to links from Messages and cannot present recommendations on both mobile and desktop browsers on iOS.\n\n\n<figure><img src=\"/images/Screen_Shot_2021-12-27_at_22.17.12.png\" /></figure>\n\n\nFor my users, Kelp was always missing some integration or they had a unique workflow that I didn't handle.\n\n\nAs a solo-preneur, I found myself iterating more on integrations than on the core product.\n\n\n## What does the future hold?\n\n\nI believe there is still space for a tool that provides contextual recommendations. We need less focus on helping people buy things they don't need and more on helping people be their best selves.\n\n\nHowever, with advertising dollars so close, contextual recommendations haven't yet had \"big tech\" dollars thrown their way. There are no tools that actively help us maintain relationships with friends ([clay.earth](https://clay.earth/) is perhaps the closest), prepare for work meetings, or find things based on context clues instead of keywords (e.g., \"what was that book Nicki sent me?\").\n\n\nI'm not sure what the future holds, but I do want to reassess Kelp's optimal location (browser, desktop, or mobile) and how to best package it as a product (including questions around privacy importance).\n\n\n## How might Kelp fit in with other tools?\n\n\nKelp does not exist in isolation. It's part of a broader ecosystem of \"personal information management\" tools. Looking at the space overall is helpful for understanding potential positioning.\n\n\nNOTE: Similar to Kelp, these tools suffer from limitations of upstream APIs.\n\n\n### Digital personal assistants\n\n\nDigital personal assistants have finally escaped the legacy of Clippy—only to run headfirst into the briar patch of call centers and support chatbots. As a result, consumer-facing digital personal assistants don't feel like an enjoyable \"premium\" experience.\n\n\nSome digital personal assistant startups targeted meeting scheduling (e.g., [x.ai](http://x.ai/)). Today we have Doodle, Calendly, and native functionality in mail/calendar apps that provide better UX around this messy transaction. It turns out that's all we really needed.\n\n\nWhat about voice-based personal assistants? Even with massive technological achievements, Alexa, Google Assistant, and Siri still remain [far behind](https://twitter.com/klivdahl/status/1475220450598924297) the prickly assistant in the [Knowledge Navigator demo](https://youtu.be/9bjve67p33E).\n\n\nThe major issue they face is that the UX for a digital assistant is not clear or easily discoverable. A good product clearly sets expectations and then meets (or exceeds) those expectations. Digital personal assistants struggle to clearly indicate their possible behaviors, and as a result, people use them for a few narrow use cases they discover during initial usage. [[ref](https://mashable.com/article/amazon-alexa-usage-drop)]\n\n\nI believe the future of digital personal assistants lies in helping us navigate messy transactions. For example, in healthcare, chat UIs are meaningfully less frustrating than trying to actually visit your PCP. As a result, within that narrow scope, human-augmented chatbots are performing quite well for many digital health businesses.\n\n\n### The 'command line' for your life\n\n\nThere is significant hype in the \"command line\" space, but none have achieved mainstream adoption yet. Many will remember [Greplin](https://techcrunch.com/2013/10/02/cue-greplin/), and now we have [Raycast](https://www.raycast.com/) and [Searchable.ai](https://www.searchable.ai/). Similar concepts with different implementations.\n\n\nMy hypothesis is that, similar to voice UIs, the interface for a command line is not easily discoverable. People will do some exploration when they first use the tool but rarely explore further. As a result, these will primarily serve the \"optimizer\" crowd. However, this audience is growing and has purchasing power. Expert tools can be viable businesses today.\n\n\nHowever, I believe the optimal UI for most tasks is direct manipulation—accurate and immediate. Command line tools sacrifice directness for the efficiency of hotkeys. For most people, correctness and control are more important than efficiency.\n\n\n### End user programming\n\n\nEnd user programming is the concept that users should be able to write programs to perform simple repetitive tasks. Apple and Google smart home apps are probably the widest distribution of this idea. People can create rules such as turning off lights when they leave the house.\n\n\nThis space faces challenges since it's easier than ever to simply learn to code. The segment of people who both have a problem that programming could solve but don't want to learn to code is relatively small. While \"if this then that\" has entered common parlance, spreadsheet-like solutions remain dominant, and \"no code\" solutions are evolving around narrower verticals (like smart homes).\n\n\nAs a result, there is no mass-adopted solution for programming behaviors across all apps ([Apple Shortcuts](https://nick.comer.io/post/ios-shortcuts) might be the closest), and perhaps that's acceptable.\n\n\n### \"Desktop 2.0\" (or 3.0?)\n\n\n<figure><img src=\"/images/obsidian.png\" /></figure>\n\n\nThe \"networked thought\" model popularized by Roam Research and Obsidian promotes linking information not by \"app\" or \"folder\" but by [keyword]. What if this approach could extend to our entire desktop? Our files, web pages, and emails would be linked together like in Roam/Obsidian (minus all the [braces] and pound signs).\n\n\nWhile this solution might interest some users, it omits most social interactions and information that is passively rather than actively tagged by users.\n\n\nMy hypothesis is that the next iteration of the desktop will center on people instead of apps. This new OS would extract data from apps (mobile) and files (desktop) via a global identity platform.\n\n\nAs Meta moves to capture a higher percentage of people's time while navigating around Apple's ad blockers, I anticipate this becoming a major battleground in the next decade.\n\n\n### Summary: The future is contextual recommendations\n\n\nI believe contextual recommendations need to be built seamlessly at the OS level to be effective, but as an independent developer, I lack the influence to effect this change.\n\n\n## What did I learn from a business perspective?\n\n\nFind a small use case that people will pay for first.\n\n\nI should have conducted more thorough diligence on identifying specific customers with very specific needs. My target user group—people managers and individual contributors at startups with too many meetings—was too broad. Each individual uses their own set of tools (Gsuite, Notion, MS Office, etc.), and teams share information differently.\n\n\nI wanted to create a cross-tool solution, but there's value in a more focused approach like \"we make Google Docs more efficient\" rather than \"we help you manage your team's information.\"\n\n\nI also learned that it's practically impossible to monetize Google Chrome extensions, so I should have abandoned that approach sooner.\n\n\n## Last but not least: Open sourcing Kelp!\n\n\nI hope the tool proves useful to future innovators in this space. You can [check it out on Github](https://github.com/zamiang/kelp).\n\n"
  },
  {
    "id": "adf01aca-d32c-48d9-8fca-50d5e6f137b3",
    "title": "Learning from a Hyper-Growth Startup",
    "slug": "learning-from-hyper-growth",
    "excerpt": "This reflection on leadership in a hyper-growth startup argues that self-management is the most crucial skill. Management in such a chaotic environment is inherently reactive and emotionally draining, not strategic and proactive. The key to effectiveness is to abandon \"ruinous empathy\"—the futile attempt to please everyone—and instead fiercely conserve personal energy for high-impact moments. This is achieved by accepting failure and tradeoffs as constant, communicating them transparently, and focusing on maximizing success in key areas rather than fighting every fire.",
    "date": "2021-10-25",
    "content": "\nI was the first engineer and 3rd employee at a company that grew from a problem statement to a team of [over 550 people with a $1.3B valuation in 3 years](https://cityblockhealth.medium.com/investing-in-health-justice-734a62ba0129). Over that time, I moved from being the only engineer to managing managers and leading a team of ~22. What did I learn?\n\n\nIt surprised me how challenging it was to maintain my identity amid the pressures of hyper-growth. Today, I'm \"battle-hardened\" and want to share some lessons in striving to be my best self in that chaotic environment. I learned about the power of strong relationships with teammates and how to ask effective questions to diagnose problems across teams. But first and critically, I learned about managing yourself.\n\n\nThese insights are difficult to deliver in a narrative format, so I've divided this post into several sections:\n\n- [Managing yourself](/adf01acad32c48d98fca50d5e6f137b3)\n- [Managing the team](/adf01acad32c48d98fca50d5e6f137b3)\n- [References](/adf01acad32c48d98fca50d5e6f137b3)\n\n<figure><img src=\"/images/_DSC0134.jpg\" /></figure>\n\n\n# Staying in Your Manager Mindset\n\n\nFew individual tasks as a manager are difficult on their own. However, there are numerous areas requiring focus, and you need to conserve your energy for tasks that carry a heavy burden.\n\n\nManagers are humans placed in positions of power, and they often struggle with how to use that power [[ref](https://twitter.com/polotek/status/1447345526408577024)]. Teammates, also human, become frustrated by organizational issues affecting their happiness, such as career growth and compensation. They are uncertain how to address these frustrations and consequently direct them toward their manager. Resolving structural issues takes quarters or even years—time that direct reports don't feel they have. As a result, managers end up expending much of their energy setting expectations and managing frustrations. This leaves little capacity for addressing systemic issues or leading major initiatives.\n\n\nFor me, the dissonance between what I wanted to accomplish and what I was actually doing made it difficult to fully focus on the task at hand. The emotional and personal challenges were substantial. I recall a low point where I hadn't slept for days and resorted to drinking half a bottle of NyQuil. Still sleepless, I went to the gym for an hour and then continued working a full day. Regular exercise and peer networks like [Orbital NYC](https://orbital.nyc/) were invaluable during recovery.\n\n\nI envisioned management as a series of deliberate actions toward accomplishing significant objectives. In reality, the opposite often occurs. Management is frequently reactive, and major decisions carry substantial emotional weight. At a high-growth company like Cityblock Health (where in year two, staff increased from ~20 to ~140), management constantly lags behind, and emotions run high.\n\n\nSeveral critical practices helped me maintain the manager mindset:\n\n- Align your expectations with reality. Expect change [[ref](https://www.zamiang.com/writing/theory-of-change)].\n- Confront failure and performance issues directly.\n- Manage your energy. Do not work if you lack the necessary focus. You cannot easily reverse management mistakes.\n- Prioritize sleep. The challenges will remain tomorrow, but you'll be better equipped to address them.\n\n### 💣 Confront Failure\n\n\nClearly communicate what you can or cannot accomplish and help others do the same.\n\n\nDiscussing failure is emotionally challenging for achievement-driven individuals (and for most people). It becomes easier once you recognize that everyone experiences failure. Failure is the environment we all navigate. We make tradeoffs, and every tradeoff disappoints someone somewhere—identify where and plan accordingly or communicate about it openly.\n\n\nI attempted to minimize the number of people I disappointed, but this approach took a significant toll (['ruinous empathy'](https://www.radicalcandor.com/stop-ruinous-empathy/)). I often arrived at compromise solutions that left everyone somewhat dissatisfied.\n\n\nNow, rather than treating tradeoffs as harm mitigation problems, I concentrate resources in areas that are working well to maximize success. Success isn't about trying to win every battle but setting early expectations about which battles you expect to win and communicating those priorities clearly. I like to say that \"we are always experiencing failures but never a failure.\"\n\n\nLater in this post, I discuss goals. Helping your direct reports become comfortable discussing their near-term objectives and supporting them when they fall short is essential. When you model the practice of discussing your goals and failures in team settings, those same conversations with your direct reports become more natural.\n\n\n### 🍃 Energy Conservation\n\n\nI initially thought that when people encounter difficult problems, they would read, research, and thoroughly discuss potential solutions. However, the reality is that you often have just three minutes in a meeting before needing to move on.\n\n\nSmall, quick wins accumulated day after day are how you build something great. Managing your energy so you can fully engage during those critical three-minute windows is essential.\n\n\nAn effective manager of managers can have a substantial impact with minimal energy expenditure. This requires quickly mapping prior experiences to new challenges. For me, writing this post (and others) helps ensure these lessons remain accessible, allowing me to retrieve them efficiently even during low-energy periods.\n\n\n<figure><img src=\"/images/_DSC0015.jpg\" /></figure>\n\n> \"I have yet to see any problem, however complicated, which, when you looked at it in the right way, did not become still more complicated.\" [[ref](https://quoteinvestigator.com/2015/06/15/complicated/)]\n\n# Helping the Team\n\n\nLong ago, I learned that my job as a manager is to help others accomplish \"the right work.\" I've tried numerous approaches to bring the right people together, adjusted meeting cadences, and refined approval processes to provide teams with necessary information and business drivers. Yet I often wondered if anything was working.\n\n\nA significant aspect of managing across multiple teams is the ability to quickly assess long-term projects and the personal dynamics within them. With accurate information, finding solutions is often straightforward. However, obtaining accurate information is simultaneously simple and extraordinarily difficult.\n\n\nUnderstanding teams and active projects requires asking uncomfortably basic questions. Ideally, ask as someone who genuinely wants to help (building trust and psychological safety are key) rather than as a leadership figure conducting an interrogation that prompts defensive or inaccurate responses. It also requires persistence in ensuring work aligns with business objectives and that technological investments are strategic rather than \"promotion-driven\" [[ref](https://twitter.com/gergelyorosz/status/1442162670753431559?lang=en)].\n\n\nRegarding what questions to ask, I find these factors for effective collaboration from [Camille Fournier](https://twitter.com/skamille/status/1304889995040362496?ref_src=twsrc%5Etfw%7Ctwcamp%5Etweetembed&ref_url=notion%3A%2F%2Fwww.notion.so%2Fbrennanmoore%2FSpinning-Learning-from-hyper-growth-c3cf6a1f6f96440bb87c8c47e0f88d83) valuable for evaluating teams and projects:\n\n- Are you communicating effectively with one another?\n- Do you know where you are going?\n- Do you know how you are getting there?\n- Do you know how to determine if you are making progress?\n- Have you done the work to ensure your team can actually accomplish their tasks?\n\n### ⚽️ Goals\n\n\nTo gain a higher-level perspective on organizational activities, many companies establish formal goals. Until recently, I had never worked in an organization with a formal goal-setting process. Previous companies focused more on delivering specific deliverables by specific dates. Goals require more nuance.\n\n\nThe process I recommend is to spend a few minutes in 1:1 meetings writing 2-3 objectives you plan to accomplish in the next 30 days. Begin by \"working backward\" from the impact of the work. Ask, \"What impact do you want this project to have, and how will you measure that impact?\" Set the impact as the deliverable rather than the feature itself, and agree on a target date. After several impact-driven meetings, you can introduce the SMART framework to evaluate whether each goal is:\n\n- Specific – targeting a specific area for improvement.\n- Measurable – quantifying or at least suggesting an indicator of progress.\n- Achievable – possible to accomplish within the timeframe.\n- Realistic – stating what results can realistically be achieved given available resources.\n- Time-related – specifying when the result(s) can be achieved.\n\nI prefer maintaining a somewhat informal approach, mentally referencing the SMART methodology while helping team members set ambitious but achievable goals.\n\n\nAlthough my team members and I often fell short of our goals, this process enhanced our ability to anticipate obstacles and enabled us to prioritize projects that addressed those obstacles. Additionally, it provided quick performance feedback that we could promptly deliver to team members\n\n\n# References\n\n\n## 🧘 My Personal Practices\n\n- Develop a hobby or personal practice completely disconnected from work.\n- Build a network of peers you can consult for advice (and whom you support in return). [[ref](https://www.get-merit.com/)]\n- Identify memorable principles to ground you.\n- Expect to encounter significant pressure. That is normal. Practice pushing back by listening and asking questions, not by being negative or defeatist.\n- Read management literature but recognize that reality is messier than theory. Consult peers at your company rather than relying solely on internet advice. This will help you better understand their leadership style.\n- Build psychological safety and allow space for venting, but then guide teammates toward constructive action [[ref](https://larahogan.me/blog/bring-solutions-not-problems/)].\n- Identify aspects of your work that bring you satisfaction and fulfillment.\n- Leadership involves creating a compelling narrative that engages people. Validating team members' experiences, demonstrating vulnerability, and maintaining transparency are valuable but insufficient for leadership.\n\n## 🗝 My Core Values\n\n- The two things that matter are people and performance—in that order. [[ref](https://fs.blog/knowledge-podcast/doug-conant/)]\n- Lead through positivity.\n- Be a source of unwavering consistency.\n- Relationships are long-term investments; projects are short-term endeavors.\n- Make myself redundant and create opportunities for others.\n\n## 📚 Resources\n\n- [The Manager's Path](https://www.goodreads.com/book/show/33369254-the-manager-s-path)\n- [The Making of a Manager](https://www.goodreads.com/en/book/show/38821039-the-making-of-a-manager)\n- [Accelerate](https://www.goodreads.com/book/show/35747076-accelerate?ac=1&from_search=true&qid=CdR41Ztymq&rank=5)\n- [The Art of Leadership: Small Things Done Well](https://www.goodreads.com/book/show/50083106-the-art-of-leadership?ac=1&from_search=true&qid=xomeEQMhqN&rank=1)\n- [The Manager's Handbook](https://themanagershandbook.com/)\n- [A curated list of articles and tips](/7a4ed588ece991c92b1ffafc26aa772f)\n- A CTO job description written in [simple affirmative statements](https://stanete.com/my-CTO-job-description)\n- Hypertext 1:1 questions [[ref](https://hypercontext.com/)]\n"
  },
  {
    "id": "7475049c-49b3-4068-814e-a5aaf37a5e78",
    "title": "Is Buying in Brooklyn Worth It?",
    "slug": "is-buying-worth-it",
    "excerpt": "The stories I read about apartment ownership were either crude financial analysis or clean NYT real estate fluff. My story is neither.",
    "date": "2021-09-29",
    "content": "\nThe stories I've read about apartment ownership were either crude financial analysis or clean NYT real estate fluff. My story is neither. In reality, no matter how nice and clean your apartment is, buying and selling an apartment is MESSY.\n\n\nI bought an apartment in Park Slope for $700K, renovated it, and sold it for $815K three years later. With $175K down, I made a 60% return. But, including the renovation costs, lawyers, permits, and agent fees, was it 'worth it'?\n\n\n## How did the renovation go?\n\n\nI don't want to detail the whole renovation process, but it was both stressful and satisfying. Before on the left; after on the right.\n\n\n<figure><img src=\"/images/Screen_Shot_2021-10-19_at_15.43.47.png\" /></figure>\n\n\n## Home ownership and sale costs (rounded)\n\n\nIf you are curious about the various costs that come into play, below is a summary of the major expenses for buying, owning, and selling an apartment.\n\n\n## Rent vs. buy calculation\n\n\nBelow you can see that renting was $38,000 more expensive than buying. However, if I had invested my down payment and renovation money in the stock market, renting would have been $100K cheaper!\n\n\nOwning property has tax benefits, but they are complex. You can deduct [mortgage interest](https://www.rocketmortgage.com/learn/mortgage-interest-deduction) from your federal taxes. If your existing deductions already push you into using the itemized deduction, this can be beneficial on your federal tax return. However, if you have few deductions and use the standard deduction, the mortgage deduction is less beneficial since the standard deduction is already quite high. You can technically also deduct property taxes, but if you can afford property in NYC, [you probably can't](https://yoreevo.com/blog/how-badly-will-tax-reform-impact-nyc-real-estate) deduct property taxes in NY. If you are curious about tax savings, consult with a CPA.\n\n\nIn my case, I received about $20K of tax savings from owning property.\n\n\n# The price of money\n\n\nThe S&P returned 56% over the term of my mortgage. That would have turned my $175,000 down payment into $273,000. After 20% capital gains tax, I would have made $78,000. That profit would have covered renting an apartment twice the price of a comparable rental.\n\n\nWhen people discuss why home ownership may not be the best investment, they refer to the 'opportunity cost of capital.' In this instance, while buying was about $38,000 cheaper than renting a comparable apartment, I missed out on significant stock market gains. The opportunity cost only increases when you incorporate other upfront costs like the cash required for renovations or place some value on your time.\n\n\nAs you can see in the real estate agent fees and the flip tax above, the transaction costs for selling an apartment are high. In addition to those fees, selling takes time. The current estimate is 5 months from listing to closing and receiving funds from the sale.\n\n\nUnfortunately, the opportunity cost was not the only expense I incurred.\n\n\n## Non-financial costs: Dust\n\n\nFor at least 6 months out of the 3 years, I was living in a construction site.\n\n\nThere were three major projects: initial renovation, replacing the stairs, and replacing the heater cover.\n\n\nWith each project, there was preparation for construction, the actual construction, and then attempting to remove as much dust as possible. You live with construction for much longer than the construction actually takes. In a large house, you might have an extra room or outdoor space for using power tools. In NYC, if you can afford an extra unused room, you can probably afford to live somewhere else while the construction is ongoing.\n\n\nSince we were not able to do much ourselves, we saved costs by doing the finishing work (sanding, painting, and staining).\n\n\nIt is difficult to quantify the cost of being surrounded by dust and construction for 6 months, but it is an inconvenience that would be unusual in a rental.\n\n\n## Non-financial costs: Permit me not\n\n\nWhen I moved in, there was an electrical box in the apartment from 1986. Today, it is considered a fire hazard, so I hired an electrician to replace it. They replaced the box for $2,200 and permitted the job with the DOB (Department of Buildings)... but then they passed away (very sad) before closing the permit. Importantly, I could not sell my apartment with an open permit.\n\n\nThus began an epic quest to close the permit!\n\n\nI'll spare you all the details, but I went from contacting an 'expeditor' (a great job title!), navigating the \"DOB: Now\" and \"DOB: Now Inspections\" websites, to finally going into the belly of the DOB to obtain a piece of paper with an email address that I used to schedule an inspection. Unfortunately, I didn't pass the inspection and had to pay an electrician another couple thousand dollars to replace the electrical box (again), issue a permit (again), and be present for another inspection.\n\n\nOriginal work: $2,200\nFixes: $900\n2nd permit: $1,500\n\n\nTotal cost: $4,600 (and a full day navigating the DOB) to replace an electrical box—a job that takes an electrician less than 2 hours.\n\n\n## Non-financial costs: Lien on me\n\n\nOne particularly challenging issue that increased costs was discovering I had two liens on the apartment. In my mind, a 'lien' was a beverage I had heard about and would probably sip in moderation if the opportunity presented itself. In banking terms, having two liens means I owed my apartment to two banks simultaneously.\n\n\nIf I were planning financial disruption, promising my apartment to as many banks as possible and then having them fight over it would be an effective strategy for destabilizing an industry. Unfortunately, my modest $500K mortgage was not enough to destabilize the trillion-dollar banking industry.\n\n\nFor a timeline of events: I obtained a mortgage through Bank of America in 2017. During the subsequent years of low mortgage rates, I unsuccessfully tried to get them to lower my rate. Instead, in November 2020, I paid approximately $5,000 to refinance and reduce my rate from 3.75% to 2.8%, which lowered my monthly payment by $500. The second bank then sold my mortgage to a third bank after just one month.\n\n\nDuring the weeks before closing on the sale of my apartment, my lawyer conducted a 'lien search' and discovered I had two liens on the apartment. One was from Bank of America and was made out to two people—Brennan Moore and Brennan Harold Moore. I later had to prove these were the same person in a rather bizarre conversation with the bank. The second lien was to the bank I refinanced with, not the bank the mortgage was later transferred to (and to whom I made monthly payments). My lawyer was understandably confused.\n\n\nUnfortunately, I bore the consequences of this confusion, as it takes FORTY-FIVE DAYS to close a lien. This delayed the closing by a month.\n\n\nMy favorite moment was when a BofA customer service representative asked if I had a fax machine. Not thinking of e-fax services, I said 'no.' They responded, \"Oh... well, in that case, we will have to email you the documents. The email takes 3 days to arrive.\"\n\n\n## Takeaways\n\n- Be extremely cautious about permitting anything.\n- Conduct regular permit searches for your apartment.\n- Perform a lien search after refinancing to ensure the process completed correctly.\n- The real estate industry needs more efficient property transfer processes.\n\n# So... was it worth it?\n\n> I really feel it is disingenuous to call home ownership a good investment for most people.\n\nA home is illiquid (selling took 5 months!) and does not provide returns comparable to the stock market at any risk tolerance. While I owned my apartment for only 3 years, my parents purchased their home for approximately $90K in the late 80s and, after significant renovations, sold it for approximately $150K in 2018. While the value of their home grew 60%, $90K invested in the S&P in 1988 would be worth over $1.8 million today. Even a much lower-risk portfolio would have more than paid for a fantastic rental.\n\n\nIn buying a home, you are purchasing control and forcing yourself to save. The renovations I completed were dramatic. As an owner, you can undertake large renovations to accommodate working from home or fix those small annoying issues present in every rental.\n\n\nOverall, I'm satisfied with my three-year ownership experience. I learned a great deal and was able, with helpful advice from many friends and loved ones, to create a space I was truly proud of.\n\n\nYesterday, I was venting to my girlfriend about yet another fee and declared I would never own again. She stopped me and said, \"You enjoy tinkering and fixing things. Don't kid yourself that you want to rent someone else's apartment forever. You are an owner at heart.\"\n\n\n<figure><img src=\"/images/Screenshot_2025-07-22_at_22.21.45.png\" /></figure>\n\n"
  },
  {
    "id": "5b8c0dc9-1688-4843-ad22-c6548ed65d68",
    "title": "How to Build Trust and Foster High-Impact Teams",
    "slug": "phases-of-impactful-small-teams",
    "excerpt": "This post argues that as startups grow, the initial high-trust environment often collapses into chaos. The common leadership mistake is to push for more speed; the real solution is to slow down and rebuild trust through predictability. The author outlines a four-stage journey where a team matures by making and keeping progressively more abstract promises: evolving from committing to specific tasks (via ticketing systems), to achieving monthly goals, and ultimately, to delivering business impact measured by KPIs. This entire process is driven by retrospectives, which help a team understand its current level of trust and take the next step.",
    "date": "2021-08-16",
    "content": "\nThis post explores the critical component of a 'strong' team: trust. I believe building a strong team means listening for the level of trust through frequent retrospectives. The team improves by incrementally adopting practices that either build trust or leverage the team's existing trust.\n\n\nI have not joined a company that had a clear roadmap for how a team progresses from 'new' to 'strong'. Without this vision, conversations about team practices were often frustrating and left newer teams feeling attacked.\n\n\nWith a vision for how a team builds trust, we can help teams advance to the next level rather than applying uniform standards to teams at different stages of development.\n\n\n<figure><img src=\"/images/Screen_Shot_2021-08-08_at_16.11.19.png\" /></figure>\n\n\n# How Trust Is Broken\n\n\n## In the beginning…\n\n\nEarly on in a startup, you are bound together with risk-takers making a singular abstract promise - find product-market fit! For me, this is the ideal team environment, and I thrive in this kind of work. However, I have struggled to maintain this creative, high-trust environment as the startup achieves success.\n\n\n<figure><img src=\"/images/Screen_Shot_2021-08-08_at_16.09.14.png\" /></figure>\n\n\n## The fall…in velocity\n\n\nIf the startup succeeds, the team will quickly transition into an environment with minimal trust.\n\n\nNew teams with new stakeholders, new team members, and shifting business needs all work to erode trust. The team has plummeted from the best kind of team to the most challenging kind of team.\n\n\nThe team was soaring, shipping at the speed of light. Now, the team is climbing the Rocky Mountains with people they barely know from Zoom meetings.\n\n\nThe team has lost trust. Teams can no longer agree on what to promise, who to make promises to, or why they are making promises in the first place.\n\n\nLeaders mistakenly push these dysfunctional teams to move faster, but at this stage, you need to slow down. Instead of focusing on 'iteration speed' or 'quality', the first challenge is to build trust between stakeholders, leads, and collaborators.\n\n\nTrust is about predictability and **not** velocity.\n\n\n<figure><img src=\"/images/Screen_Shot_2021-08-08_at_16.09.54.png\" /></figure>\n\n\n# How to Build Trust on Teams\n\n\nWe build trust to handle bigger challenges. To collaborate effectively, teams make promises to other teams and then keep those promises. Making and keeping promises allows groups of people to depend on one another.\n\n\nAs a team matures, it can evolve from making specific promises (e.g., \"we will build you this exact API endpoint by next sprint\") to more general promises (e.g., \"we will help you solve your data access problem this quarter\"). More general promises can have greater impact at lower cost by allowing the team more creative freedom and encouraging deeper collaboration (i.e., understanding the business need).\n\n\nWe build trust to handle bigger challenges.\n\n\nThis trust-building process is broken into four stages. In each stage, the team makes incrementally more abstract 'promises' to the business (and each other) and then builds trust by delivering on those promises. The four stages of trust are:\n\n1. No trust: Functional chaos\n2. Some trust: Measurement and ticketing _(think: Jira and burn-down charts)_\n3. Strong trust: Goals _(think: multi-month projects delivered on time-ish)_\n4. Deep trust: Impact _(think: KPIs and quarter-level projects moving business metrics)_\n\n## Kickoff: Retrospectives\n\n\nBefore starting out, the team must arrive at a shared understanding of the present reality and then align expectations about what will happen in the future. This is where the 4 stages of trust come in.\n\n\nMuch like setting off on the Oregon Trail, take stock of the team and resources, plan for the challenges ahead (dysentery!), and then embark on a journey toward a known destination.\n\n\nThe team should be able to start the journey knowing they are on the same page as leadership.\n\n\nRunning great retrospectives shouldn't hold you back from running retrospectives at all. You can't learn if you don't share. In general, retrospectives should capture what went well, what didn't go well, and other notable events. It helps to have someone who can energize the event to maintain high participation. Once things are going well, I highly recommend occasionally inviting stakeholders to see how you work.\n\n\nIf you would like to learn more about running retrospectives, here are a few resources I found helpful:\n\n- [Growing our team with retrospectives](https://plaid.com/blog/growing-our-team-with-retrospectives/)\n- [Running effective retros](http://werve.net/articles/running-effective-retrospectives)\n- I highly recommend using [EasyRetro](https://easyretro.io/) to facilitate the process\n\n<figure><img src=\"/images/Screen_Shot_2021-08-08_at_21.25.48.png\" /></figure>\n\n\n## 1 - No trust: Functional Chaos\n\n\nA lot of work is happening, but the promised work rarely gets done. It is unclear if the work being done is the 'right' work or whether it is having any impact.\n\n\nI had a new manager join the team who said, \"this is not a lean team, this is an emaciated team.\" She was right. Each team member individually managed multiple pieces of infrastructure and had no real metrics for success. Sprints were difficult to predict since the scope was too large and the number of stakeholders was staggering. The team was highly motivated to get things working, but that left team members scrambling to put out fires, rarely documenting work or making their efforts visible to the PM or their manager. Engineers thought they were working at peak efficiency, while stakeholders thought nothing was getting done—a terrible situation.\n\n\n**What do team meetings look like?**\n\n\nStandup feels like a waste of time since the day's plans are never realized.\n\n\n**What does success look like?**\n\n\nSuccess is being able to plan forward day over day and then week over week.\n\n\n**What are common retro topics?**\n\n\nThe team is probably not having retrospectives. If there are retrospectives, there are likely a few dominant voices expressing frustrations without seeing results.\n\n\n**What should you be doing to get to the next phase?**\n\n\nStop. Just stop.\n\n\nThe leaders need to get buy-in from the company/partners to temporarily slow the team's work. Stop hiring. Do NOT bring in external consultants or additional headcount to a team in this phase.\n\n\nThe team should have an offsite or much longer retrospective to get people talking and healing. Then, begin bi-weekly retrospectives. Bring in stakeholders to help them understand the team if they can engage productively. Ideally, the team's stakeholders can be part of the solution by finding ways to limit work in progress.\n\n\nThis is where a leader (you?) can present a more hopeful future. As mentioned above, the most important (and most difficult) challenge for the leader is to share their views with the team and then together with the team, arrive at a shared understanding of reality. Once you have that shared understanding, the team can share experiences working on 'dream teams' and the leader can help articulate that north star. Then, together, chart the path toward that north star.\n\n\nI deeply believe that the next step to repair trust between both team members and the company is the methodical practice of measurement and acting based on data.\n\n\n## 2 - Some trust: Measurement\n\n\nPeople find they cannot trust what others say, so they find a tool they can trust instead. The tool serves as an intermediary for all work.\n\n\nThis is when the team makes serious use of a planning tool like Jira (or one of the many alternatives) with estimates. User stories are added ahead of time and broken down into small units of work (tasks), and then each task is assigned and estimated.\n\n\nAs a manager on a team like this, your job is to find fun and creativity despite the rigid structure. This phase involves significant change as the team decides what to embrace and measures the impact of those changes. Those changes might include:\n\n- Get people excited about measurement by trying out a new tool ([Clickup](https://clickup.com/), or [Linear](https://linear.app/))\n- Kanban vs sprints\n- 1, 2, or 3-week sprints\n- Story points or time tracking\n- Trying a tagging system and altering the ticket structure\n- Using Slack bots and GitHub integrations to make work less monotonous\n\nStandup should be daily and conducted around the board. Before starting work, the team must break down user stories into tasks, estimate each task, and then determine what amount of work can be completed in a given timeframe. You can't fix what you can't measure.\n\n\n**What do team meetings look like?**\n\n\nTeam meetings are 90% about tickets and unanticipated blockers. People rarely reference the big-picture quarterly goals or business needs.\n\n\n**What does success look like?**\n\n\nThe team anticipates roadblocks and delivers on timelines accurately.\n\n\nIn my experience, the big 'win' at this phase is being able to successfully add people to the team. The process work is dull, but adding new energy to the team often helps this phase be more engaging.\n\n\n**What are common attributes?**\n\n\nThe team usually starts with longer sprints (3 weeks), and team planning meetings are conducted synchronously. PMs are often involved in the 'who' and the 'how' of work items as they do not yet fully trust the Technical Lead.\n\n\n**What are common retro topics?**\n\n- Unanticipated technical debt issues\n- Lack of understanding of business goals\n- Team members are brought a solution rather than a problem\n- Engineers are not effectively raising blockers or sharing setbacks in standup\n\n**What should you be doing to get to the next phase?**\n\n\nThe measurement phase is when you build the team fundamentals—the foundations of trust.\n\n- <u>Communication</u>\nEach team member needs to practice communicating in retrospectives and effectively use standup and messaging to share unanticipated changes in a productive, non-inflammatory way. Team leaders need to develop skills to be both active listeners and swift problem solvers to address unanticipated setbacks.\n- <u>Stability</u>\nIf bugs are regularly introduced or the system crashes, no one will trust the engineers who built it. Prioritize tracking system reliability metrics like 'mean time to restore' and 'change failure rate' (see: [Accelerate](https://www.amazon.com/gp/product/B07B9F83WM/ref=ppx_yo_dt_b_d_asin_title_o01?ie=UTF8&psc=1)) to prevent system stability issues from eroding trust.\n- <u>Address Technical Debt</u>\nIn addition to improving system health, the team should improve its 'internal health' by addressing factors that slow progress or add unpredictability (e.g., a flaky test suite or a stakeholder who intervenes inappropriately).\n- <u>Value each team member's time</u>\nAs the team becomes more consistent in hitting its goals, diligent estimation may not be the best use of engineer time. The team can gradually stop breaking down and estimating every individual task as a group and have engineers estimate individually as best suits their level of experience. Engineers should be able to help each other plan in less formal settings such as chat or quick pairing sessions.\n- <u>Morale</u> \nCelebrate wins as widely as possible, such as at larger department or company-wide meetings. Share progress and learnings in retrospectives—smart failures are progress, and progress builds morale.\nCelebrate 'heroes' but do not depend on them. Ensure no work done by team members goes unrecognized. If people need to go above and beyond or take on unplanned work, make sure to acknowledge it but not incentivize it (a delicate balance!).\n\n## 3 - Strong trust: Goals\n\n\nAt this point, your team should have strong fundamentals. The PM and tech lead need to excel at communicating the business context, user stories, and/or project documents in whatever form works best for the team (tickets, slide deck, documents). Individual contributors should be skilled at asking questions and flagging blockers. The team should collaborate using 'blame-free' and supportive language. The infrastructure and tooling should be reliable enough to support frequent deployments and have sufficient test coverage and/or monitoring so that developers can build reliable software.\n\n\nWith those fundamentals in place, the work can become more creative. Rather than building to a specification and breaking down all tickets far in advance, the team is trying to address a user story or business need. The team should have the trust to ship experiments or small tests to see what will address the need and will likely start using feature flagging or versioned interfaces.\n\n\nPMs and stakeholders will become less involved in the 'how' and more focused on the 'what', the 'why', and metrics around 'how we will know if we hit our goal'.\n\n> _Note: This phase is easiest to achieve for teams doing 'feature work' as feature work is a notch bigger than a 'sprint'. Data teams or infrastructure teams may have many smaller projects on the order of days and then larger quarter-level initiatives. This means there isn't a clear next step up. I believe it requires a technical leader to help break these quarter-level projects down into milestones that can be 'goals', or a PM to group a set of smaller asks into a larger month+ 'launch' as a 'goal', but even so, it is challenging._\n\n**What do team meetings look like?**\n\n\nTeam meetings are 20% about tickets and 80% focused on discussion of goals, questions about different implementation tradeoffs, upcoming blockers, and improving system/usage metrics.\n\n\n**What does success look like?**\n\n\nWork should feel much more engaging. Engineers are able to think longer-term and move at higher velocity due to less ticketing overhead. PMs spend less time with engineers on the 'who' and 'how' of tickets and more time with stakeholders, socializing the next initiatives.\n\n\n**What are common attributes?**\n\n- ~2 week sprints or effective kanban\n- Less 'overhead' to running sprints (fewer group meetings and/or shorter team meetings)\n- Smaller meetings, such as a TL and PM planning the sprint\n- PMs not involved in the 'who' and the 'how' of work items but deeply involved in the 'what', 'why', and 'when'. PMs spend more time bringing engineers along.\n- TL and ICs on the team collaborate to break down work with less involvement from the PM.\n- ICs can pull from a general pool of work.\n\n**What are common retro topics?**\n\n- Our goal was not well articulated, or a shared understanding of the goal was not achieved\n- Too many meetings / meetings are too large\n- Isolation from other teams\n\n**What should you be doing to get to the next phase?**\n\n\nThis is when you start looking beyond your team. By this time, you are likely one of the stronger teams in your organization. You are delivering value quickly, but you are often still being told what problems to solve and when to solve them. You may struggle to understand how your work helps the business.\n\n\nThere is an even better way of working ahead. But it requires the business to change.\n\n\n## 4 - Deep trust: Impact\n\n\nThe major difference between this and the prior phase is that work is connected to a longer-term strategy. In each phase, the team makes progressively more abstract 'promises' to the business. To move beyond user stories, you need the business to leverage KPIs or some system that can give you direction, autonomy, and a way to measure your success. Depending on the company's stage, that may simply not be possible.\n\n\nThe KPIs need to be communicated repeatedly and remain consistent for at least a quarter so that teams understand what other teams are doing at a high level. The team alone can't make this happen; the business needs to be willing to focus on specific drivers without major distraction for an extended period. The business needs to trust the team to deliver without imposing rigid timelines.\n\n\nIn my experience, this is the hardest phase to achieve when the team is relatively close to the business. At Cityblock, one team built software for doctors who then cared for patients. If the insurance company's total cost for those patients was lower this year than last year, Cityblock made money. The time horizon and indirection make it difficult to tie success or failure to the software used by the doctors. A team that is closer to the business, like an e-commerce checkout team, or further from the business, like an infrastructure team, can have an easier time here (though they often have challenges in the 'goals' phase).\n\n\n**What do team meetings look like?**\n\n\nLarge team meetings have 0% focus on tickets, with approximately 50% focus on goals and 50% on moving metrics. There are still discussions about features, but there are more debates on how to test whether they will have the anticipated impact.\n\n\n**What does success look like?**\n\n\nKey business metrics improve significantly. Team members are involved in decision-making.\n\n\n**What are common retro topics?**\n\n- Too many meetings / meetings are too large\n- Team isn't handling tactical requests effectively\n- Metrics may not be correctly aligned with goals\n\n**What should you be doing to get to the next phase?**\n\n\nI don't have a definitive answer. I have never been able to maintain this phase for long. Often, personnel changes or shifts in business strategy reset the team to 'phase 1'.\n\n\n---\n\n\n# In Summary\n\n\nThe type of process you employ on your team is a function of the trust between team members. As a leader, you can run a more effective team that derives satisfaction from their work by meeting them where they are and working with the team to adjust processes as the level of trust changes. You can maximize your team's potential by working with them to improve trust among team members and between the team and the business.\n\n\nThe journey to rebuild trust—from 'functional chaos' to an 'impact-driven' team—is lengthy and will encounter challenges. At a high level, the journey will look something like this:\n\n1. Start regular retrospectives with a more extensive retrospective to kick things off.\n2. The team works together to predict the tasks they will complete.\n3. Team leads measure the team's delivery rate, failure rate, and track issues that block or slow progress (like technical or process debt).\n4. Reduce focus on task-level prediction and increase focus on delivering larger projects or hitting goals.\n5. Reduce focus on work delivery and increase focus on the impact of work.\n6. If the team changes significantly... return to step 1.\n\n### Key Points\n\n- Early teams commit to tasks or features, while mature teams commit to abstract concepts.\n- Rapid growth necessarily disrupts early trust patterns. ([ref](https://jchyip.medium.com/why-its-difficult-to-build-teams-in-high-growth-organisations-e1aee8446337))\n- To rebuild trust, focus on predictability, not speed.\n- The journey to rebuild trust begins with the team developing a shared understanding of the current reality and then aligning expectations about future developments. This is where the vision for effective teams comes in.\n- Grow gradually. Similar to an individual progressing from a new engineer to a team lead, the team will incrementally handle work with increasing levels of uncertainty.\n- Return to the measurement phase if the team changes significantly to reinforce fundamentals.\n    - 'Significant change' means a substantial team size change or a new leader like a TL or PM.\n    - While traditions from being a more mature team should persist and help the team quickly return to its previous state, new team members have not built the same fundamentals as the rest of the team.\n\n## References\n\n- [Tuckman's stages: Forming, Storming, Norming, Performing](https://www.mindtools.com/pages/article/newLDR_86.htm)\n- [Accelerate: The Science of Lean Software and DevOps: Building and Scaling High Performing Technology Organizations](https://www.amazon.com/gp/product/B07B9F83WM/ref=ppx_yo_dt_b_d_asin_title_o01?ie=UTF8&psc=1)\n- [Why it's difficult to build teams in high growth organizations](https://jchyip.medium.com/why-its-difficult-to-build-teams-in-high-growth-organisations-e1aee8446337)\n"
  },
  {
    "id": "33eb72a7-04fa-4dd0-9671-8abd450e39c4",
    "title": "What Does Working at a Successful Startup Look Like Financially?",
    "slug": "working-at-a-successful-startup-look-like-financially",
    "excerpt": "or…how it cost me $1,000,000 to sell startup shares on the secondary market.",
    "date": "2021-07-16",
    "content": "\n_or…how it cost me $1,000,000 to sell startup shares on the secondary market._\n\n\nAfter joining 3 startups, I was fortunate enough to help found a company that grew from 0 to single-digit billions in valuation in just 4 years. My role during much of that time was leading the engineering team. While I don't know the exact percentage of the company I originally owned, my current shares amount to approximately 0.002% of the company, worth about $X,000,000. The million-dollar question is: when converted to cash, how much money do I actually receive?\n\n\n## Why Sell Some Shares?\n\n\n$X,000,000 is an unfathomable sum for someone who never really imagined making $100K/year. I grew up in a relatively modest rural area to well-educated parents. I attended public school without tutors or extensive extracurricular activities. Sundays were spent cutting coupons from the newspaper, and it took years after college to feel comfortable ordering an appetizer at a restaurant. I feel extremely fortunate about my upbringing and the resources I had access to. However, my world growing up differs significantly from NYC in 2021.\n\n\nI chose to sell a portion of my shares because the money would be transformative. I also believe having 95%+ of my net worth in a single company represents significant risk.\n\n\n## What Happens When Selling Shares on the Secondary Market?\n\n\nSelling shares on the secondary market is quite involved. End-to-end, it took 16 weeks from contacting the secondary sales company to receiving funds.\n\n\nAfter leaving the startup I helped found, I contacted my long-time tax advisor about potentially selling some shares of the company I had worked at for the past 4.5 years. I asked whether there were any tax implications I needed to be aware of when selling shares on the secondary market. He confirmed that since I had early exercised and completed an [83(b) election](https://www.investopedia.com/terms/1/83b-election.asp), the shares would qualify for long-term capital gains. Great!\n\n\nOn April 15th, I signed agreements to sell a portion of my shares totaling $2,000,000 on the secondary market (Note: this is not the actual amount). I believed this approach would preserve significant upside potential while immediately helping me live more flexibly and assist my mother in retiring. (This was [pre-tomato plants](https://twitter.com/sweatystartup/status/1405205780329078793?lang=en))\n\n\nFor transactions of my size, the facilitators take their maximum fee of 5%, which in this case is $100,000. Here is how I calculated my anticipated net proceeds:\n\n\n```html\n2,000,000 - 100,000 \nTotal after placement fee = $1,900,000\n\n1,900,000 * 0.2 (federal long term capital gains) + 1,900,000 * 0.12 (NYC state + local)\nTotal taxes = $608,000\n\n1,900,000 - 608,000\nTotal take home = $1,292,000\n\n(608,000 + 100,000) / 2,000,000\nTaxes and fees as a percent of takehome: 35%\n```\n\n\nOn April 28th, President Biden announced a tax plan where capital gains over $1,000,000 would be taxed as ordinary income, with the changes retroactive to April 28th, 2021. Unfortunately for me, the taxable event date for my sale is not when I signed the transfer agreement (April 15th) but when I receive the funds. This means my transaction, despite being initiated without knowledge of this potential policy change, would be subject to this new tax rate. With this new rate, my total taxes and fees would be:\n\n\n```html\n2,000,000 - 100,000\nTotal after placement fee = $1,900,000 \n\n1,000,000 * 0.2 (federal) + 900,000 * 0.4 (federal under Biden plan) + 1,900,000 * 0.12 (state)\nTotal taxes = $788,000 \n\n1,900,000 - 788,000 \nTotal take home = $1,112,000\n\n(788,000 + 100,000) / 2,000,000 \nTaxes and fees as a percent of takehome: 44%\n```\n\n\nThis reduces the net proceeds on a sale of $2,000,000 in stock to $1,112,000. 44% of the total is consumed by taxes and fees. However, there was nothing I could do, so the process continued.\n\n\nIn mid-July, approximately 14 weeks after signing the transfer agreements with the buyer, the funds from the secondary sale arrived in my account. This transfer occurred 4 years and 10 months after the options were initially granted to me, which I had early exercised with the [83(b) election](https://www.investopedia.com/terms/1/83b-election.asp). After the sale was complete, the company voided my prior stock grants and issued me a new grant with my remaining shares.\n\n\nMinor note: The cost basis of my shares was $0.01, so my calculations rounded down to $0.00 for calculating capital gains. State taxes are also deductible on your federal taxes up to a maximum of $10,000. Both of these factors would provide a few thousand dollars in savings.\n\n\nNote 2: I am validating these calculations with multiple CPAs.\n\n\n## Exemption!\n\n\nAround this time, a financial advisor from a large investment bank reached out via LinkedIn about helping startup employees manage their new wealth. I responded, and they informed me that my shares might be eligible for a '[QSBS tax exemption](https://www.brownadvisory.com/us/theadvisory/qsbs-tax-exemption-valuable-benefit-startup-founders-and-builders)'. Despite having researched extensively about taxes relating to startup shares and consulting my tax advisor prior to the sale, I had never heard of a 'qualified small business' tax exemption.\n\n\nThe QSBS exemption means that if you owned shares of a 'qualified small business' while the business had less than $50 million in assets and held those shares for 5 years, then up to $10,000,000 in profits are <u>completely exempt from federal taxes</u>.\n\n\nThe concept that there are additional tax exemptions beyond long-term capital gains was astonishing to me. I never anticipated the federal government would create a 100% tax exemption, so I never investigated this possibility.\n\n\nWhile the QSBS exemption benefits early-stage employees/founders, it is particularly advantageous for early-stage startup investors. It also allows individuals to [roll funds](https://www.brownadvisory.com/us/theadvisory/qsbs-tax-exemption-valuable-benefit-startup-founders-and-builders) into other investments before the 5-year mark and maintain tax exemption. For example, if you invest in an early-stage startup and sell those shares after 3 years, you can invest your money in another early-stage startup within 6 months and sell after 2 years (5 years total invested in a QSBS). These investments now avoid any federal taxes on profits up to $10,000,000 per year, allowing you to stagger sales to further minimize taxes.\n\n\nNote: There are apparently also more [controversial](https://www.propublica.org/article/lord-of-the-roths-how-tech-mogul-peter-thiel-turned-a-retirement-account-for-the-middle-class-into-a-5-billion-dollar-tax-free-piggy-bank) tax saving methods where you purchase shares with your [ROTH IRA](https://www.irafinancialgroup.com/learn-more/financial-success/start-up-founder-stock-in-a-roth-ira/).\n\n\n## How Does QSBS Apply to My Situation?\n\n\nAfter conducting research, I found that the startup appears to qualify as a 'qualified small business' and that approximately half of my shares were vested while the company had less than $50 million in assets. However, given that I sold some shares, complications arise.\n\n- If I sold half of my shares, did I sell the first half (those that would qualify for QSBS in the future) or the last half? How would I determine this?\n- Given that I now have a completely new stock grant with a new date, can any of my shares be considered as having been held while the company had < $50 million in assets?\n\nMy current understanding is that one or both of these factors disqualify me. This means none of the shares I currently own will be eligible for the QSBS exemption in the future.\n\n\n## A Stacked Game\n\n\nIn summary, I made one decision that cost me either $X00,000 (at the current tax rate) or $1,000,000+ (under proposed capital gains changes) in taxes. Given that none of my shares qualify for QSBS in the future and that taxes on my shares are 35%-44% of $X,000,000, that cost equates to approximately 1/4-1/3 of my personal wealth.\n\n\nHow does that feel? I have mixed emotions—I'm doing well financially yet feeling somewhat disappointed. It reminds me of playing a board game with someone who didn't explain all the rules beforehand. They suddenly announce, \"boom, I win; game over,\" revealing some previously unmentioned rule. Had I known about this hidden rule, I would have adopted a different strategy, but the moves have already been made.\n\n\nWith one move, I simultaneously encountered two hidden rules—a retroactive tax change and an obscure tax exemption. Had I known about either one, I would have waited or sold fewer shares.\n\n\n## What's Next?\n\n\nI was relatively advantaged in this situation and still experienced significant financial impact. I've worked at many startups and learned about the [AMT exemption](https://www.investopedia.com/terms/a/alternativeminimumtax.asp) and the [83(b)](https://www.investopedia.com/terms/1/83b-election.asp) election, which few startup employees both know about and can afford. The 83(b) election requires paying to exercise options covering 4 years within 30 days of starting a new job. In most cases, this costs tens of thousands of dollars. Even fewer understand how the AMT exemption applies to exercising startup options (consult your CPA about this). By early exercising all my shares when their value was $0.01, I was able to \"hold\" my shares as long as possible and get closer to the QSBS exemption.\n\n\nIs all this fair? I'm not certain. Many individuals have accumulated significantly more wealth by utilizing AMT, QSBS, and their ROTH IRAs in ways few understand. Complexity inherently benefits those with knowledge and resources.\n\n\nWhat I do know is that I now have both more knowledge and more financial resources than before.\n\n"
  },
  {
    "id": "1367e1bb-741c-4799-8297-5e82810b897d",
    "title": "Guide to Engineering Ladder Communication",
    "slug": "engineering-ladder-communication",
    "excerpt": "Creating a successful engineering ladder isn't about perfect documentation—it's about building trust and psychological safety. The best ladders are actively used by teams and trusted across the organization because they're built on a foundation of \"trust but verify\" principles and open communication. Treat your ladder like a business relationship with SLAs, acknowledge potential failure modes, and remember that its success hinges on whether both engineers and management share a common understanding of its terms. ",
    "date": "2021-05-26",
    "content": "\n_Why your engineering ladder doesn't really matter, but team buy-in does._\n\n\n<figure><img src=\"/images/_DSC7109.jpg\" /></figure>\n\n\nI've been involved in numerous engineering ladder revamps throughout my career. I've witnessed excellent frameworks fail and simplistic ladders succeed. A good ladder isn't necessarily one with perfect documentation or comprehensive edge-case coverage, but rather one that is actively used by your team and trusted across the organization. The ladders pictured above don't look impressive, yet they're vital to our fishing industry. How do you ensure your ladder gains widespread adoption and organizational support?\n\n\n## **What is a ladder?**\n\n\nAt its core, a ladder is a framework to categorize people into groups and compensate them accordingly. However, it can be much more. A well-designed ladder can empower engineers to accurately self-evaluate and advocate for their growth path. It can be used to appropriately place new hires in the right role. At the team level, it can serve as a framework to equitably evaluate performance, which informs compensation and title decisions.\n\n\nFirst, the ladder needs firm ground to stand on.\n\n\n<figure><img src=\"/images/_DSC7129.jpg\" /></figure>\n\n\n## The ladder foundation\n\n\nManagers often emphasize the benefits of ladders without addressing the uncomfortable core function: segmenting people and paying them differently. This presents challenges at both individual and team levels.\n\n\nAt the individual level, people typically struggle with acknowledging their own gaps or celebrating their successes. Both highlighting your achievements and sharing insecurities can be extremely uncomfortable in an unsupportive environment. This discomfort can cause people to behave differently than they would in normal work settings, creating challenging situations for managers. Even individuals who accurately assess their own performance may question whether others are evaluated with the same level of scrutiny.\n\n\nAt the team level, performance is more collaborative than many companies acknowledge. Managers are responsible for providing appropriate opportunities and fostering a high-performance environment with motivated collaborators. Ladders often fail to address performance within the context of challenging working conditions, such as opportunity gaps or interpersonal issues that can impede advancement. This asymmetry—where the company evaluates individuals without reciprocal evaluation—can generate conflict.\n\n\nBased on these experiences, I believe ladders require a foundation built on two key elements:\n\n1. <u>Trust of the organization</u> so that employees believe their investment in the ladder will yield results.\n2. <u>Psychological safety between managers and direct reports</u> so they can discuss performance gaps, seek appropriate opportunities, and resolve interpersonal issues.\n\nBefore implementing a ladder, you must ensure that this foundation of organizational trust and psychological safety is robust, or your ladder will collapse.\n\n\n### 1. Organizational trust\n\n\nFirst, you should <u>not</u> simply ask team members to trust the organization. Instead, encourage them to build a relationship based on 'trust but verify.' An engineer wouldn't blindly trust an API that merely claimed to 'work well.' For a critical service, you would expect metrics like average response time, throughput limits, and uptime guarantees in a Service Level Agreement (SLA) incorporated into a business contract.\n\n\nAn effective exercise to build trust is to establish SLAs for this 'career advancement service.' Begin by discussing anticipated failure modes and your strategies for addressing them.\n\n\n**Examples of anticipated failures:**\n\n- Categorizing people into a limited number of groups will inevitably result in some misplacements.\n- People at the upper or lower bounds of levels may experience frustration due to either struggling with broader scope responsibilities or being close to higher compensation.\n- Due to fundraising cycles or other company-wide events, promotion cycles may not occur as scheduled.\n- Evaluation inconsistencies may exist between different managers.\n\n**Based on these failure modes, we could establish SLAs such as:**\n\n- Failure rate (frequency of mis-leveling)\n- Mean time to restore (how quickly mis-leveling is corrected once identified)\n- Response time (adherence to performance review schedules)\n- A qualitative metric such as \"Do you believe you and your peers are evaluated fairly?\"\n\nThe most critical aspect is demonstrating awareness of potential failures and your commitment to addressing them when they occur. This approach builds trust. Additionally, if you provide a mechanism for the team to verify that the ladder is being properly implemented, they can contribute more productively to improvements. For example, if candidates are frequently interviewed at incorrect levels (high 'failure rate'), you can target that specific issue rather than discarding the entire ladder system.\n\n\n### 2. Psychological safety\n\n\nThe foundation of a learning culture is psychological safety—mutual respect and the ability to take risks without fear of negative consequences. When teams have psychological safety, they're more willing to acknowledge their mistakes and develop preventative measures. They're also more comfortable raising concerns and exploring innovative solutions.\n\n\nThe ladder implementation process presents an excellent opportunity to build psychological safety by demonstrating vulnerability to your team. [Recent research](https://www.strategy-business.com/article/Building-a-culture-of-learning-at-work) suggests that sharing past experiences regarding feedback reception and discussing current development goals in a group setting contributes positively to team psychological safety.\n\n\nIf you're comfortable sharing in a group setting, tell your team about a time when you benefited from constructive criticism and identify areas where you're currently focusing your development efforts. This can initiate a valuable process where you openly discuss your improvement areas and welcome (and receive!) their assistance.\n\n\nIn more extensive one-on-one settings, I have utilized [this list](https://randsinrepose.com/archives/your-mid-year-leadership-check-in/) of questions by [@rands](https://twitter.com/rands) to gain deeper insights. I share my responses with team members during one-on-ones to establish rapport and invite them to share theirs.\n\n\n## Stabilize the foundation\n\n\nWith a relatively safe and trusting environment established, you can articulate why the ladder is important. This helps make the ladder less intimidating, particularly for newer team members.\n\n\n### How to talk about the importance of the ladder\n\n\nIn the past, I insufficiently emphasized the business aspects of the ladder. Upon reflection, I would discuss the ladder in business terms, as I believe it fundamentally establishes a business relationship—and it would be disingenuous to suggest otherwise. A ladder is an arrangement where the business compensates individuals who can provide services the organization anticipates needing in the future.\n\n\nA ladder helps define the parameters of that business relationship. Both the capabilities that a business requires and individuals' competencies evolve over time. The ladder and broader performance process provide an opportunity to reassess and adjust the terms of that relationship. For example, when an employee develops and can deliver more value or better services that the business needs, their compensation should increase accordingly.\n\n\n### How does the ladder work?\n\n\nLadder placement involves gathering data from three sources:\n\n- External information such as certifications, years of experience, or educational background to gain insight into life experiences that may help the company anticipate challenges.\n- Peer assessments of demonstrated skills. Independence exemplifies this well. While solitary work is generally not ideal, the ability to deliver substantial features independently enables contributions to new project initiation. Thus, an engineer who demonstrates independence may provide greater value to a company than someone who cannot work autonomously.\n- Self-assessment.\n\nAbove all, remember that a ladder is not personal—you are not defined by your work. This is business.\n\n\n# What's next?\n\n\nA ladder's success isn't determined by its ability to articulate career levels, but by whether both the team and management trust it and share a common understanding of its terminology. Can the team trust that fulfilling the ladder requirements will lead to timely promotion? Can managers trust that the team actually uses it? Can both parties trust that people are leveled consistently across teams, regardless of gender, race, or company tenure?\n\n\nContinue to ask these questions and pursue ongoing improvement.\n\n\n**Ladder references**\n\n\nA competency matrix/ladder should undergo continuous improvement. I recommend reviewing the ladder references below as potential starting points. You can then customize the ladder to meet your specific needs and update it as those needs evolve.\n\n- Open source ladders on [progressions.fyi](https://www.progression.fyi/), [this repo](https://github.com/bmoeskau/engineering-ladders), and [here](https://www.swyx.io/career-ladders/)\n- [Fog Creek Professional Ladder](http://joelonsoftware.com/articles/ladder.html)\n- [Programmer Competency Matrix](http://sijinjoseph.com/programmer-competency-matrix/)\n- [Dropbox Engineering Career Framework](https://dropbox.github.io/dbx-career-framework/ic1_software_engineer.html)\n"
  },
  {
    "id": "7591d852-4d99-4872-ae3b-aa8d766357ba",
    "title": "How we beat the Shopify 100 variant limit",
    "slug": "shopify-variant-limit",
    "excerpt": "This post outlines a responsible way for developers to get around the Shopify 100 variant limit, and to understand the tradeoffs enough to sell the feature to clients.",
    "date": "2017-02-13",
    "content": "\n_…without going completely crazy in the process._\n\n\nThis post outlines a responsible way for developers to get around the Shopify 100 variant limit, and to understand the tradeoffs enough to sell the feature to clients.\n\n\nAs many, many people have noticed. You can only have 100 variants for any given product on Shopify. For probably 99.999% of shops, this is totally fine. While I don’t fully understand the rational for the limit, it exists and Shopify does a good job communicating the limit.\n\n\nSo what can we do if a client wants more than 100 variants for a product, but doesn’t have the money for a large Magento / Spree / Solidus build?\n\n> Enter us, the few, the proud, the 100 variant limit breakers.\n\n# The 100+ variant client\n\n\nWe have a client that wants to create a nice experience for buying custom sofas and chairs. There are three basic ways to customize the product: Fabric (8), Wood finish (4), and Size (5). In total, that gives us 160 variants per sofa or chair. Sadly, that puts us above the 100 variant limit. But, we may be able to get that number down.\n\n\n## The hope: Line item properties\n\n\nShopify recommends using ‘line item properties’ to get around the 100 variant limit. Line item properties are a way for you to add { key: value } pairs to a line item. But, line item properties cannot change the price. Also, there is no UI in Shopify admin for managing images that correspond to a line item property — like you might for a variant. This would be useful if the ‘Color’ property changes the image but not the price.\n\n\nTo help us see if we can use line item properties, I made a little chart for our client. Can we decrease the number of variants by using line item properties?\n\n\n```plain text\nFabric    |    Finish    |    Size  \nChanges image:     yes            yes            no  \nChanges price:     yes            no             yes\n```\n\n\nSadly, each of our properties needs a variant.\n\n> Interestingly, we accepted this project because we misunderstood line item properties — thinking they could change the price. We basically went ‘OH SHIT’ and came up with our solution.\n\n# The Million Variant Solution\n\n> The solution is to break the product up into logical ‘sub-products’ that are less than 100 variants each and then group the ‘sub-products’ into collections.\n\nFor us, that meant breaking the product up by fabric material. We had 2 different materials, so that gives us ~80 variants per product. Below is how that might look in the Shopify Admin/products page for 2 sofas and a chair:\n\n\n<figure><img src=\"/images/1*W7MwTi75n1aql8mN_4BnSg.png\" /></figure>\n\n\n## Individual products (‘sub-products’)\n\n\nThe most important part of setting up each ‘sub-product’, is that each option for each variant needs to be in EXACTLY the same order across each product. In our case, the order is: Size, Color, Finish.\n\n\nIf the values of a property are the same across ‘sub-products’, we need to make sure the values are EXACTLY the same. This allows us to de-dupe when we display them. For us, Size is always 80, 85, 90, 95, 100. The downside is that adding or changing a size now requires changing it across all ‘sub-products’.\n\n\nFinally, we tag the products (“The Ludlow”) so that we can can easily group them later.\n\n\n<figure><img src=\"/images/1*ugDRIIkneFYo3yYw6OZuQQ.png\" /></figure>\n\n\n## Product collections (products)\n\n\nUsing the tag we added above (“The Ludlow”), we create a new collection of products where the tag is equal to “The Ludlow”. For our site, this product collection will be our actual product. We can now create many different products that exceed the variant limit and easily display them on the site under this collection. Here we can control the public title, description and image for the product. People will never see pages for the individual ‘products’ — only this collection.\n\n\n<figure><img src=\"/images/1*cfhx3_V8OamxcZn12cS1TQ.png\" /></figure>\n\n\n# Displaying products with 100+ variants\n\n\nNow that we have the backend setup, we need to display these ‘collection products’.\n\n\n<figure><img src=\"/images/1*klaGJvHqDwDWWtTmI8BYvQ.png\" /></figure>\n\n\n‘Collection products’ are our own invention and are really just regular collections that render using the template `collection.liquid`. We will be making some significant changes to the collections template but we want to continue to render other collections normally. Shopify has a nice way to change the template a collection uses under ‘Theme template’ on the collection page. Here we create a new template called `collection.{type}.liquid` and then change each ‘collection product’ to use this new template.\n\n\nIn this new template, we render all variants of all products in the ‘collection product’ in javascript. Note that options are accessed by index like option0 (size), option1 (color), option2 (finish). Sadly this is the only way to access options and is why keeping the option order consistent is so important.\n\n\n```plain text\nvar allVariants = [  \n   {% for product in collection.products %}  \n     {% for variant in product.variants %}  \n       {  \n         id: “{{ variant.id }}”,   \n         sku: “{{ variant.sku }}”,  \n         size: “{{ variant.option0 }}”,  \n         color: “{{ variant.option1 }}”,  \n         finish: “{{ variant.option2 }}”,  \n         price: “{{ variant.price | money }}”,  \n         type: “{{ product.type }}”,  \n         image: \"{{ variant.image.src }}\"  \n       },  \n      {% endfor %}  \n   {% endfor %}  \n ];\n```\n\n\nFor us, our UI was a bit more complex than merely select boxes so we could not use [Shopify’s option_selection.js](http://www.zamiang.com/r/?url=http%3A%2F%2Ffreakdesign.com.au%2Fblogs%2Fnews%2F105830151-make-a-product-in-shopify-with-more-than-the-100-variant-limit). I wrote a small backbone app to handle changes. You can check that [backbone app out here](http://www.zamiang.com/r/?url=https%3A%2F%2Fgist.github.com%2Fzamiang%2Ff8b9f8e1bf396d375d7569f00fb0e2dc). If you are familiar with Backbone, you should be able to easily modify it to suit your app.\n\n\n# The Tradeoffs\n\n\nWeirdly, the most difficult part here isn’t the actual solution, but dealing with the repercussions. The reality is that Shopify is not designed for these ‘collection products’. Some big tradeoffs are:\n\n\n## Sorting\n\n\nCreating a page for a ‘collection products’ with 100+ variants is only part of the problem. The next part of the problem is when you want to display these ‘collection products’ across the site in sortable groups. For example, we want to display products on the homepage in a certain order. Since our ‘products’ are really collections, this is very difficult. We need to hardcode this in the template. Adding or removing a sofa or chair now requires an engineer to update that custom code on the homepage. You can get around this with other hacky solutions using [metafields](http://www.zamiang.com/r/?url=https%3A%2F%2Fdocs.shopify.com%2Fthemes%2Fliquid%2Fobjects%2Fmetafield), but metafields only work on products, not collections.\n\n\n## Brittleness\n\n\nAdditionally, option order and property names need to be consistent across each product in a product collection. This makes the site more brittle and difficult to edit for the client.\n\n\nI hope it gives some examples of the tradeoffs to support products with 100+ variants. So, in short, it definitely is possible — and not that difficult really — it just complicates things a bit more.\n\n"
  },
  {
    "id": "56dfd7bb-111f-4dd4-bbde-a1c2b941adf0",
    "title": "Learning from Artsy: How to hire awesome engineers",
    "slug": "hiring-awesome-engineers",
    "excerpt": "Finding smart, motivated people who work well together is virtually impossible. If Artsy has a secret sauce, it is how it hires. All else falls from the assumption that they have hired the best people who want to work together to achieve Artsy’s mission.",
    "date": "2016-08-01",
    "content": "\nThis is a key lesson I learned while directing the web engineering team at Artsy. Artsy's vision is that art can be as popular as music, and its mission is to bring all of the world's art online. It has now raised over [50MM](http://blogs.wsj.com/privateequity/2015/03/26/catterton-leads-25-million-funding-round-for-artsy/) and has made it to that in-between phase where it is ['not a startup not yet a company'](https://www.youtube.com/watch?v=IlV7RhT6zHs).\n\n\nBeing a part of that change was an incredible opportunity. While I was at Artsy, the company matured and grew from 15 to about 90 people. Since leaving, it has further matured and the staff count is over 100. Each of these people probably have their own list of things Artsy does right or wrong, but this series is my list. The hope is that this helps me (and maybe others) build on Artsy's success in future roles. My knowledge, and these lessons, reflect my experience within engineering team and not the company as a whole.\n\n\n# Hiring awesome people\n\n\nFinding smart, motivated people who work well together is virtually impossible. If Artsy has a secret sauce, it is how it hires. All else falls from the assumption that they have hired the best people who want to work together to achieve Artsy’s mission.\n\n\n## Finding awesome people\n\n\nThe first step in hiring is defining the position. Artsy does this by crafting aspirational rather than clinical job descriptions. Within engineering, the job description focus on challenges, ownership, opportunities for growth and quality of team. In keeping with this high level approach, Artsy lists qualifications as fundamentals rather than 'x years doing y'.\n\n\nEven with a great job posting, reaching engineers is challenging. At a recent engineering event, a CEO was walking around interrupting conversations to ask people if they were developers, and if so, pitched his company. In contrast, Artsy values the unique knowledge and contributions of individual engineers. It demonstrates these values through contributing to open source, blogging, speaking and targeted press. During this process, engineers begin to understand Artsy, and Artsy understands individual engineers. Rather than yelling 'developers!, developers! developers!' in crowded room, Artsy uses this knowledge to vet and make dedicated offers to individual engineers.\n\n\nThe takeaway is that the key to finding great people is making the hiring process about people. Artsy's process is in direct contrast with my current role where engineering applicants create an account on our hiring portal and fill out a 12 page form before we can contact them. This severely limits our applicant pool. Artsy keeps the barriers to 'first contact' low through online contact via OSS/blogging and by inviting candidates to a casual team event or coffee.\n\n\n## Evaluating awesome people\n\n\nIf you could choose between an doing interview or doing references which would you pick?\n\n\nArtsy is very much in the 'references' camp but does continue to do interviews -- it just does them non-traditionally. Starting with a rigorous process for finding highly targeted people to interview enables a different interview process. Instead of a rigorous evaluation, Artsy uses the interview to answer questions about the candidates experience and then focuses on selling the candidate on the company.\n\n\nThis lack of focus on the interview, stems from the belief that it is impossible to tell good from great in an interview for creative or technical roles. The interview is a highly artificial environment that is unrelated to how the individual creates value day to day. While the environment is artificial, one-on-one are also reliable because they play on our biases. We often \"value intuition over historical data\" and \"value people who are similar to us\" much more than we should. We are also influenced by quick and superficial qualities such as attractiveness, race or background which have nothing to do with the candidate's ability to perform. Some companies change their interview process to fix all of these issues. Artsy solves this by acknowledging these biases, communicating them and focuses on references.\n\n\nArtsy's secret weapon in evaluating candidates is doing references in a thorough way. Artsy believes that 'references are not a defense against hiring poorly, they are a way to hire great people'. There are a variety of techniques for improving reference calls. In general, the goal is to see questions like \"What are your general thoughts on x's performance?\" and \"How was working with x?\" as warmup questions rather than the meat of the call. The call can focus on more substantive questions where you ask the reference to compare 'x' against other people. For example, 'Are they the best person you've worked with in that role?', 'Why are they not the best?'. Ask about what get the person excited and what makes them happy. Just like when seeking out individuals, reference calls are about understanding who they are as an individual and whether they will be able to perform at a high level in your organization.\n\n\nJust like interviews, references have many biases and issues. Consider the strength of the reference and the general strength of employees from that company. Ideally someone experienced in the industry, with has a wide network tied into many similar companies, should do the reference call. After doing many interviews and references, you will understand which organizations have consistently awesome people and which don't. You will also build up a network of people you can ask for a second opinion on a candidate.\n\n\n## Closing on hiring awesome people\n\n\nThe closing process is just as high touch as you've been all along. If you either make an offer or reject the candidate, do so thoughtfully by incorporating feedback from references and interviews so the individual can improve. Deciding whether to make an offer is always difficult but is really asking ['Is this someone you would actively seek to work with?'](http://www.quora.com/What-is-the-engineering-interview-process-like-at-Stripe)\n\n\nDuring the closing process, salary negotiations will come up. The negotiation is not an opportunity to try to get the most out of a person for the least amount of money. Salary negotiators are unfair and inconsistent with any organization that values actual human beings. As Artsy states, 'compensation is a function of the value of the candidate based on market rate, the value the company brings to the candidate and the market in between'. For figuring out market rate, dB., the CTO of Artsy, recommends [responding to recruiter spam](http://code.dblock.org/2015/01/09/how-to-make-recruiter-spam-useful-my-canned-response.html) to ask about comp. They have also published the comp framework [here](http://artsy.github.io/blog/2015/04/03/artsy-engineering-compensation-framework/).\n\n\nWhen closing, consider other factors that may go into them accepting the offer. Don't hesitate to bring in employees, references or investors to support making the hire. If they accept, send a something personalized and anything you think might generally interest the candidate errr… new hire - Congrats!\n\n\n# Takeaways\n\n\nAfter moving on to a different company, I've discovered just how challenging it is to enact a similar hiring process. You can't pick and choose various convenient or 'easy' parts of Artsy's hiring process, and just apply them. Each step builds on the previous one - such a with the closing process. During a thorough reference call, you often learn information that helps you make the hire when the time comes.\n\n\nAnother challenge with implementing this is making the time. It takes an extraordinary amount of effort to create a human centered hiring process. Creating a little hiring portal and posting on LinkedIn is easy but, it doesn't work. At my current company, we mostly race to do things that needed doing yesterday. We don't yet have a product process where we plan features (say, in sprints) and execute them. Without proper planning, it is near impossible to set aside time to [mine our network](http://firstround.com/review/Mine-Your-Network-for-Early-Stage-Hiring-Gold/), thoughtfully pursue and meet with the kind of people we want to hire.\n\n\nI've also gained a greater appreciation for the network effects of Artsy's hiring process. By actually understanding and caring about people, the process generates a lot of good will even when it doesn't work out. That good will pays off in terms of valuable referrals. Without this network, contacting people is more challenging. In my new role where we yet to develop this network, we also have yet to open source anything or create any kind of blog. This limits our exposure to engineers. In addition to these challenges online, we work in deep Sunset Park, Brooklyn. We are over an hour from anyone working in Manhattan and far from community events. While this may sound like a ton of challenges, by using this model, we at least have identified a clear goal and the problems in our way.\n\n\nIn summary, if you want to hire awesome engineers, put in the work. Demonstrate that you care about and understand the value engineers provide.\n\n"
  },
  {
    "id": "4b262608-91fa-459d-823e-2c9c99021927",
    "title": "Debugging a live Saturn V",
    "slug": "debugging-a-live-saturn-v",
    "excerpt": "We all have stories, as engineers, of fixing some crazy thing at the last minute right before the demo goes up. We have all encountered situations where we needed to fix something that was our fault and we needed to fix it now.",
    "date": "2015-01-11",
    "content": "\nWe all have stories, as engineers, of fixing some crazy thing at the last minute right before the demo goes up. We have all encountered situations where we needed to fix something that was our fault and we needed to fix it now.\n\n\nThis story is something that I think about in those times to remember to stay calm. No last minute fix could ever be this dramatic or important.\n\n\nMy grandfather passed away about a week ago. At the service, I was asked to say a few words and read from his memoirs. This was my choice.\n\n\n---\n\n\n## RED TEAM 4 TO THE POD\n\n\n_The first unmanned launch of a Saturn V on November 9th. 1967. From the personal memoirs and the pen of William E. Moore January 28th. 1994._\n\n\nThere was five of us Rocket Scientists lounging around the ready room listening to the Apollo 4 Countdown on loud speakers and headsets. We were members of the Red Team Group and we were the Electrical Systems experts on all hardware interfaces between the firing room and the Saturn V vehicle three miles away. Our ears were now being drawn into a developing situation happening on the net. No response was received from an electrical circuit that controlled the separation of the S-II Stage from the S-1C Stage in flight.\n\n> \"That was one of my electrical circuits!\"\n\nIt just so happened that circuit is controlled by a series of relays located almost directly beneath that cold beast that was spewing out all kinds of funny colored, very cold gases -- the Saturn V rocket. We took a look at our blue prints and found the relay that must be the problem and called for a recycle in the countdown to a point where we could cycle the switch on the electrical networks console to see if the relay would pick up -- that was a \"no go\". Now things got serious. The NASA Test Conductor was talking 'scrub the launch' but our S-II Stage Test Conductor was talking 'go to the pad'.\n\n\nWell, the Red Phone rings.\n\n> \"Bill, how sure are you that this relay is the problem? Are we going to send people to the pad to rewire the rocket and not be able to launch because we guessed wrong?\" said \"AC\" Filbert C. Martin\n> \"It's worth a shot, the signal is not reaching the vehicle and that relay module is the only active component between the Firing Room Console and the Vehicle. You snap out the old Relay Module and snap in the new one and we will be able to tell if that was the problem a few seconds later.\"\n> \"Well, we are a little concerned about sending a team to the pad with a fully loaded vehicle. We thought your team would do a lot of blueprint trouble shooting -- I'm not sure we planned to actually send anybody out to a fueled vehicle\"\n> \"Just don't let them launch this mother till we are at least half way back from the pad -- OK!\"\n\nAbout thirty minutes later the five of us (Bob Kelso NRR Sr. Tech, Bill Moore; NAR Engineer/ Team Leader, the NASA Safety Engineer, the NRR Quality Control and the NASA Pad Leader) got the official word to head for the Launch Pad with our new Relay Pod. It was 11:30pm. It was a dark, slow, three mile trip. As we got closer to the Saturn V it was shrouded in a white cloud of venting gases which relieved the pressures building up inside the vehicle fuel tanks.\n\n\nOur goal was to enter this two level hermetically sealed, all welded steel coffin called the Mobil Launcher Base topped by a fully loaded 363 ft. high Saturn V, weighing 6.2 million pounds, and the permanently attached 380 ft. high Umbilical Tower, weighing 500k pounds. We finally stopped and left our van to walk up and into the second level of the Mobile Launcher Base. About this time, it came to my mind that during one of our training sessions we were told that one of the fully fueled prototype S-II rocket stages had been exploded out in the desert. The results showed that all buildings better be at least three miles from the launch pads - which they are. We were now within 25 feet of this 363ft tall bomb that sounded like it's giant fuse had been lit, and we were soon going to get much closer.\n\n\nThe Saturn V was more noisy and ghostly than I had ever expected and it had grown much taller and certainly more threatening since last week. The venting fuel made loud hissing sounds when relief valves popped or opened up suddenly. It was very easy to let your imagination infect your brain. This is a very dangerous place and everything seems to be moving in the heavy foggy mist. There was no way to talk to each other, heck, we could barely see each other and...we hadn't thought of this problem so we held onto each others yellow protective clothing like kindergartners crossing the street. We all wore safety helmets but they just did not make you feel like you were really safe.\n\n\nAs we climbed up the last step prior to opening the sealed submarine type entry door that led into the second level. We slowly opened the heavy steel hatch-type pressurized door it was like stepping into the jaws of a huge steaming dragon. The nitrogen fog, used to suppress fire, and the dim red glow from the emergency lights of level A made it look like a hollywood swamp scene. We started making our way through the 21 compartments to find our Relay Rack as the noise took on a more penetrating tone that seemed to bounce from wall to wall.\n\n\nThe smell became a mixture of kerosene with a mild touch of burnt paint and rubber. I was glad that the astronauts did not take this path to go aboard the Saturn V because my goosebumps were changing to a weird color of purple. With the realization that this was a much worse place to be trapped in, the team moved more rapidly to the relay rack. We replaced the old relay module and then had to cycle the switch on the firing room console. We then checked that the relay kicked in and that the signal was picked up on the vehicle. We resealed the cabinet, signed off on all the paperwork and got the out of there without any more sight seeing.\n\n\nThe drive back to the ready room very was fast and uneventful. The five of us were like stone figures, thinking about where we had been and what we had just accomplished. What could have happened and didn't. All of this without ever realizing that this experience was as close to being in the shoes of an Saturn V astronaut as any of us would ever be again.\n\n\n---\n\n\nIn later letters, my grandfather mentions how fortunate he really was, having growing up a farm boy in West Virginia to have not just once in a lifetime experiences, but really once in many lifetimes experiences. The service was about celebrating his life, and this seems like one of those incredibly unique events that really does celebrate his life, both in terms of how he handled a mind bogglingly stressful situation and how he tells it the comfortably detailed and slyly humorous ease that was so characteristic of how he spoke.\n\n\nA really incredible man who really contributed a lot to the world around him and meant a lot to those close to him, he will be sorely missed.\n\n\nWe all have stories, as engineers, of fixing some crazy thing at the last minute right before the demo goes up. We have all encountered situations where we needed to fix something that was our fault and we needed to fix it now.\n\n\nThis story is something that I think about in those times to remember to stay calm. No last minute fix could ever be this dramatic or important.\n\n\nWe all have stories, as engineers, of fixing some crazy thing at the last minute right before the demo goes up. We have all encountered situations where we needed to fix something that was our fault and we needed to fix it now.\n\n\nThis story is something that I think about in those times to remember to stay calm. No last minute fix could ever be this dramatic or important.\n\n\nWe all have stories, as engineers, of fixing some crazy thing at the last minute right before the demo goes up. We have all encountered situations where we needed to fix something that was our fault and we needed to fix it now.\n\n\nThis story is something that I think about in those times to remember to stay calm. No last minute fix could ever be this dramatic or important.\n\n"
  }
]